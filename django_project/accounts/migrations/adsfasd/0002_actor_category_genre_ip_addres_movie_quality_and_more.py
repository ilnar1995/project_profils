# Generated by Django 4.1 on 2023-04-28 14:35

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('accounts', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Actor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Имя')),
            ],
            options={
                'verbose_name': 'Актеры',
                'verbose_name_plural': 'Актеры',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, verbose_name='Категория')),
                ('description', models.TextField(verbose_name='Описание')),
                ('url', models.SlugField(max_length=160, unique=True)),
            ],
            options={
                'verbose_name': 'Категория',
                'verbose_name_plural': 'Категории',
            },
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Имя')),
                ('url', models.SlugField(max_length=160, unique=True)),
            ],
            options={
                'verbose_name': 'Жанры',
                'verbose_name_plural': 'Жанры',
            },
        ),
        migrations.CreateModel(
            name='IP_addres',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip', models.CharField(max_length=15, verbose_name='IP адрес')),
            ],
        ),
        migrations.CreateModel(
            name='Movie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Имя')),
                ('tagline', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='Слоган')),
                ('title', models.CharField(max_length=200, verbose_name='Название в оригинале')),
                ('description', models.TextField(verbose_name='Описание')),
                ('url', models.SlugField(max_length=130, unique=True)),
                ('poster', models.ImageField(upload_to='poster/%Y/%m/%d/', verbose_name='Постер')),
                ('year', models.PositiveSmallIntegerField(default=2022, verbose_name='Дата выхода')),
                ('country', models.CharField(choices=[('США', 'США'), ('Россия', 'Россия'), ('Австралия', 'Австралия'), ('Австрия', 'Австрия'), ('Албания', 'Албания'), ('Андорра', 'Андорра'), ('Аргентина', 'Аргентина'), ('Афганистан', 'Афганистан'), ('Беларусь', 'Беларусь'), ('Бельгия', 'Бельгия'), ('Болгария', 'Болгария'), ('Бразилия', 'Бразилия'), ('Великобритания', 'Великобритания'), ('Венгрия', 'Венгрия'), ('Вьетнам', 'Вьетнам'), ('Гана', 'Гана'), ('Германия', 'Германия'), ('Германия (ФРГ)', 'Германия (ФРГ)'), ('Гонконг', 'Гонконг'), ('Греция', 'Греция'), ('Грузия', 'Грузия'), ('Дания', 'Дания'), ('Израиль', 'Израиль'), ('Индия', 'Индия'), ('Индонезия', 'Индонезия'), ('Иордания', 'Иордания'), ('Иран', 'Иран'), ('Ирландия', 'Ирландия'), ('Исландия', 'Исландия'), ('Испания', 'Испания'), ('Италия', 'Италия'), ('Казахстан', 'Казахстан'), ('Камбоджа', 'Камбоджа'), ('Канада', 'Канада'), ('Катар', 'Катар'), ('Кения', 'Кения'), ('Китай', 'Китай'), ('Колумбия', 'Колумбия'), ('Корея Северная', 'Корея Северная'), ('Корея Южная', 'Корея Южная'), ('Кыргызстан', 'Кыргызстан'), ('Латвия', 'Латвия'), ('Ливан', 'Ливан'), ('Литва', 'Литва'), ('Люксембург', 'Люксембург'), ('Македония', 'Македония'), ('Малайзия', 'Малайзия'), ('Мальта', 'Мальта'), ('Марокко', 'Марокко'), ('Мексика', 'Мексика'), ('Нидерланды', 'Нидерланды'), ('НоваяЗеландия', 'НоваяЗеландия'), ('Норвегия', 'Норвегия'), ('ОАЭ', 'ОАЭ'), ('Пакистан', 'Пакистан'), ('Парагвай', 'Парагвай'), ('Перу', 'Перу'), ('Польша', 'Польша'), ('Португалия', 'Португалия'), ('Пуэрто Рико', 'Пуэрто Рико'), ('Румыния', 'Румыния'), ('СССР', 'СССР'), ('Сербия', 'Сербия'), ('Сингапур', 'Сингапур'), ('Словакия', 'Словакия'), ('Таиланд', 'Таиланд'), ('Тайвань', 'Тайвань'), ('Турция', 'Турция'), ('Узбекистан', 'Узбекистан'), ('Украина', 'Украина'), ('Уругвай', 'Уругвай'), ('Фарерскиеострова', 'Фарерскиеострова'), ('Филиппины', 'Филиппины'), ('Финляндия', 'Финляндия'), ('Франция', 'Франция'), ('Хорватия', 'Хорватия'), ('Чехия', 'Чехия'), ('Чехословакия', 'Чехословакия'), ('Чили', 'Чили'), ('Швейцария', 'Швейцария'), ('Швеция', 'Швеция'), ('Эстония', 'Эстония'), ('ЮАР', 'ЮАР'), ('Япония', 'Япония')], max_length=30, verbose_name='Страна')),
                ('link', models.URLField(verbose_name='Ссылка на видео')),
                ('imdb', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(10.0)], verbose_name='IMDB')),
                ('kr', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(10.0)], verbose_name='КР')),
                ('draft', models.BooleanField(default=False, verbose_name='Скрытость')),
                ('actors', models.ManyToManyField(related_name='film_actor', to='accounts.actor', verbose_name='актеры')),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.category', verbose_name='Категория')),
                ('directors', models.ManyToManyField(related_name='film_director', to='accounts.actor', verbose_name='режиссер')),
                ('genre', models.ManyToManyField(to='accounts.genre', verbose_name='жанры')),
            ],
            options={
                'verbose_name': 'Фильм',
                'verbose_name_plural': 'Фильмы',
            },
        ),
        migrations.CreateModel(
            name='Quality',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Качество',
                'verbose_name_plural': 'Качество',
            },
        ),
        migrations.CreateModel(
            name='Translation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Перевод',
                'verbose_name_plural': 'Перевод',
            },
        ),
        migrations.AlterField(
            model_name='user',
            name='avatar',
            field=models.ImageField(null=True, upload_to='photos/%Y/%m/%d/', verbose_name='Avatar'),
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Почта')),
                ('name', models.CharField(max_length=100, verbose_name='Имя')),
                ('text', models.TextField(max_length=5000, verbose_name='Сообщение')),
                ('time_create', models.DateTimeField(auto_now_add=True)),
                ('movie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='accounts.movie', verbose_name='фильм')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='children', to='accounts.review', verbose_name='Родитель')),
            ],
            options={
                'verbose_name': 'Отзыв',
                'verbose_name_plural': 'Отзывы',
            },
        ),
        migrations.CreateModel(
            name='RatingMovie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vote', models.SmallIntegerField(choices=[(1, 'like'), (-1, 'dislike')], verbose_name='Голос')),
                ('ip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ratingmovie', to='accounts.ip_addres', verbose_name='IP адрес')),
                ('movie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ratings', to='accounts.movie', verbose_name='фильм')),
            ],
        ),
        migrations.AddField(
            model_name='movie',
            name='quality',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.quality', verbose_name='Качество'),
        ),
        migrations.AddField(
            model_name='movie',
            name='translation',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.translation', verbose_name='Перевод'),
        ),
        migrations.CreateModel(
            name='LikeDislikeReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vote', models.SmallIntegerField(choices=[(1, 'like'), (-1, 'dislike')], verbose_name='Голос')),
                ('Review', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='likedislikereview', to='accounts.review', verbose_name='звезда')),
                ('ip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='likedislikereview', to='accounts.ip_addres', verbose_name='IP адрес')),
            ],
        ),
    ]
